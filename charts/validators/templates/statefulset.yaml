{{- if .Values.enabled }}
{{- $root := . -}}

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "validators.fullname" $root }}
  labels:
    {{- include "validator.labels" $root | nindent 4 }}
spec:
  replicas: {{ $root.Values.validatorsCount }}
  selector:
    matchLabels:
      {{- include "validators.selectorLabels" $root | nindent 6 }}
  serviceName: {{ template "validators.fullname" $root }}
  template:
    metadata:
      labels:
        {{- include "validators.selectorLabels" $root | nindent 8 }}
      {{- with $root.Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- with (concat $root.Values.imagePullSecrets $root.Values.global.imagePullSecrets) }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with $root.Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ . }}
      {{- end }}
      {{- with $root.Values.affinity }}
      affinity:
        {{ toYaml . | nindent 8 | trim }}
      {{- end }}
      {{- with $root.Values.tolerations }}
      tolerations:
        {{ toYaml . | nindent 8 | trim }}
      {{- end }}
      {{- with $root.Values.nodeSelector }}
      nodeSelector:
        {{ toYaml . | nindent 8 | trim }}
      {{- end }}
      {{- with $root.Values.securityContext }}
      securityContext:
        {{ toYaml . | nindent 8 | trim }}
      {{- end }}
      serviceAccountName: "validators"
      priorityClassName: {{ $root.Values.priorityClassName | quote }}
      initContainers:
        - name: get-configs
          image: "{{ $root.Values.cliImage.registry }}/{{ $root.Values.cliImage.repository }}:{{ $root.Values.cliImage.tag }}"
          imagePullPolicy: {{ $root.Values.cliImage.pullPolicy }}
          securityContext:
            runAsUser: 0
          env:
            - name: WEB3SIGNER_URL
              value: {{ $root.Values.web3signerEndpoint }}
          args:
            - "sync-validator-keys"
            - "--db-url"
            - "{{ $root.Values.dbKeystoreUrl }}"
            - "--output-dir"
            - "/data"
            - "--default-recipient"
            - "{{ $root.Values.suggestedFeeRecipient }}"
            - "--total-validators"
            - "{{ $root.Values.validatorsCount }}"
          volumeMounts:
            - name: data
              mountPath: /data
        - name: prepare
          image: "{{ $root.Values.initImageBusybox.registry }}/{{ $root.Values.initImageBusybox.repository }}:{{ $root.Values.initImageBusybox.tag }}"
          imagePullPolicy: {{ $root.Values.initImageBusybox.pullPolicy }}
          securityContext:
            runAsUser: 0
          command:
            - sh
            - -c
            - >
              ls -lha /data;
              mkdir -p /data/lighthouse/validators;
              cp /data/validator_definitions.yml /data/lighthouse/validators/validator_definitions.yml;
              cat /data/signer_keys.yml > /data/config;
              cat /data/config;
              cat /data/proposerConfig.json;
              chown -R {{ $root.Values.securityContext.runAsUser }}:{{ $root.Values.securityContext.runAsUser }} /data;
          volumeMounts:
            - name: data
              mountPath: /data
      containers:
        - name: validator
          image: "{{ (pluck $root.Values.type $root.Values.image | first ).registry }}/{{ (pluck $root.Values.type $root.Values.image | first ).repository }}:{{ (pluck $root.Values.type $root.Values.image | first ).tag }}"
          imagePullPolicy: {{ $root.Values.image.pullPolicy }}
          args:
            {{- range (pluck $root.Values.type $root.Values.flags | first) }}
            - {{ . | quote }}
            {{- end -}}

            {{- if eq $root.Values.type "prysm" }}
            - "--{{ $root.Values.network }}"
            - "--config-file=/data/config"
            - "--validators-external-signer-url={{ $.Values.web3signerEndpoint }}"
            {{- else if eq $root.Values.type "lighthouse" }}
            - "--network={{ $root.Values.network }}"
            {{- else if eq $root.Values.type "teku" }}
            - "--network=auto"
            - "--config-file=/data/config"
            - "--validators-external-signer-url={{ $.Values.web3signerEndpoint }}"
            - "--validators-proposer-config=/data/proposerConfig.json"
            {{- end }}

            {{- if eq $root.Values.type "teku" }}
            - "--validators-proposer-default-fee-recipient={{ $.Values.suggestedFeeRecipient }}"
            {{- else }}
            - "--suggested-fee-recipient={{ $.Values.suggestedFeeRecipient }}"
            {{- end }}

            {{- include "validator-graffiti" $ | trim | nindent 12 }}

            {{- include "beacon-rpc-node" $ | trim | nindent 12 }}

            {{- if $root.Values.metrics.enabled }}
            {{- range (pluck $root.Values.type $root.Values.metrics.flags | first) }}
            - {{ . | quote }}
            {{- end }}
            {{- end }}

            {{- if $root.Values.builder.enabled }}
            {{- range (pluck $root.Values.type $root.Values.builder.flags | first) }}
            - {{ . | quote }}
            {{- end }}
            {{- end }}

            {{- if $root.Values.keyManagerApi.enabled }}
            {{- range (pluck $root.Values.type $root.Values.keyManagerApi.flags | first) }}
            - {{ . | quote }}
            {{- end }}
            {{- end }}

            {{- range (pluck $root.Values.type $root.Values.extraFlags | first) }}
            - {{ . | quote }}
            {{- end -}}

          {{- if $root.Values.metrics.enabled }}
          ports:
            - containerPort: {{ $root.Values.metrics.port }}
              name: metrics
              protocol: TCP
          {{- end }}
          {{- with (pluck $root.Values.type $root.Values.readinessProbe | first) }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with (pluck $root.Values.type $root.Values.livenessProbe | first) }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with $root.Values.resources }}
          resources:
            {{ toYaml . | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: data
              mountPath: /data
          {{- if and $root.Values.keyManagerApi.enabled $root.Values.keyManagerApi.tokenSecret.name }}
            {{- if eq $root.Values.type "prysm" }}
            - name: apitoken
              mountPath: /data/auth-token
              subPath: {{ $root.Values.keyManagerApi.tokenSecret.publicKey }}
            {{- else if eq $root.Values.type "lighthouse" }}
            - name: apitoken
              mountPath: /data/lighthouse/validators/api-token.txt
              subPath: {{ $root.Values.keyManagerApi.tokenSecret.publicKey }}
            - name: apitoken
              mountPath: /data/lighthouse/validators/.secp-sk
              subPath: {{ $root.Values.keyManagerApi.tokenSecret.privateKey }}
            {{- else if eq $root.Values.type "teku" }}
            - name: apitoken
              mountPath: /data/validator/key-manager/validator-api-bearer
              subPath: {{ $root.Values.keyManagerApi.tokenSecret.publicKey }}
            {{- end }}
          {{- end }}
      volumes:
        - name: data
          emptyDir: {}
        {{- if and $root.Values.keyManagerApi.enabled $root.Values.keyManagerApi.tokenSecret.name }}
        - name: apitoken
          secret:
            secretName: {{ $root.Values.keyManagerApi.tokenSecret.name }}
        {{- end }}

{{- end }}
